{
    "sourceFile": "backend/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1741513081424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741782940882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { connectCloudinary } from \"./src/utility/clodinary.js\";\r\n \r\n dotenv.config();\r\n connectCloudinary();\r\n-const port = process.env.PORT || 8081;\r\n+const port = process.env.PORT || 5000;\r\n const app = express();\r\n \r\n app.use(cookieParser());\r\n app.use(express.json());\r\n"
                },
                {
                    "date": 1741846130482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { connectCloudinary } from \"./src/utility/clodinary.js\";\r\n \r\n dotenv.config();\r\n connectCloudinary();\r\n-const port = process.env.PORT || 5000;\r\n+const port = process.env.PORT || 8080;\r\n const app = express();\r\n \r\n app.use(cookieParser());\r\n app.use(express.json());\r\n"
                }
            ],
            "date": 1741513081424,
            "name": "Commit-0",
            "content": "import express from \"express\";\r\nimport dotenv from \"dotenv\";\r\nimport { connectDb } from \"./config/db.connect.js\";\r\nimport { router } from \"./src/routers/router.js\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport cors from \"cors\";\r\n\r\ndotenv.config();\r\n\r\nconst port = process.env.PORT || 8081;\r\nconst app = express();\r\n\r\napp.use(cookieParser());\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\napp.use(\r\n  cors({\r\n    origin: \"http://localhost:5173\",\r\n    credentials: true,\r\n  })\r\n);\r\n\r\napp.use(\"/api\", router);\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.send(\"Welcome to MediTrack..\");\r\n});\r\n\r\n// ðŸ”¥ Connect to MongoDB BEFORE starting the server\r\nconnectDb().then(() => {\r\n  app.listen(port, () => {\r\n    console.log(\"Server running on port\", port);\r\n  });\r\n}).catch((error) => {\r\n  console.log(\"Failed to connect to MongoDB\", error);\r\n});\r\n"
        }
    ]
}