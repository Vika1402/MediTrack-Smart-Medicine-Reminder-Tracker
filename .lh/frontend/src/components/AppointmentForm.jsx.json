{
    "sourceFile": "frontend/src/components/AppointmentForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1742109875022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742110119619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,55 @@\n import React, { useState } from \"react\";\r\n+import { useSelector, useDispatch } from \"react-redux\";\r\n import axiosInstant from \"../utils/axiosInstant\";\r\n import { toast } from \"react-toastify\";\r\n-import { useSelector, useDispatch } from \"react-redux\";\r\n-import {\r\n-  setAppointments,\r\n-  setLoading,\r\n-  setError,\r\n-} from \"../redux/appointmentSlice\";\r\n+import { setAppointments, setLoading, setError } from \"../redux/appointmentSlice\";\r\n+\r\n const AppointmentForm = () => {\r\n+  const dispatch = useDispatch();\r\n+\r\n+  // âœ… Redux se logged-in user ka id fetch kar rahe hain\r\n+  const userId = useSelector((state) => state.auth.userId); // ðŸ”¥ Ensure auth slice has userId\r\n+  const loading = useSelector((state) => state.appointments.loading);\r\n+\r\n   const [formData, setFormData] = useState({\r\n-    userId: \"\", // Should be set automatically from logged-in user\r\n+    userId: userId || \"\", // Redux se aane wala user ID\r\n     doctorId: \"\",\r\n     appointmentDate: \"\",\r\n     appointmentTime: \"\",\r\n     notes: \"\",\r\n   });\r\n \r\n-  const [loading, setLoading] = useState(false);\r\n-\r\n   const handleChange = (e) => {\r\n     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n   };\r\n \r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n-      setLoading(true);\r\n+      dispatch(setLoading(true));\r\n       const res = await axiosInstant.post(\"/api/appointments\", formData);\r\n \r\n       if (res.data.success) {\r\n         toast.success(res.data.message);\r\n \r\n+        // âœ… Redux store me naye appointment ko add karna\r\n+        dispatch(setAppointments([...res.data.appointments]));\r\n+\r\n+        // âœ… Form reset\r\n         setFormData({\r\n-          userId: \"\",\r\n+          userId: userId,\r\n           doctorId: \"\",\r\n           appointmentDate: \"\",\r\n           appointmentTime: \"\",\r\n           notes: \"\",\r\n         });\r\n       }\r\n     } catch (error) {\r\n+      dispatch(setError(error.response?.data?.message || \"Something went wrong\"));\r\n       toast.error(error.response?.data?.message || \"Something went wrong\");\r\n     } finally {\r\n-      setLoading(false);\r\n+      dispatch(setLoading(false));\r\n     }\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1742110237242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect } from \"react\";\r\n import { useSelector, useDispatch } from \"react-redux\";\r\n import axiosInstant from \"../utils/axiosInstant\";\r\n import { toast } from \"react-toastify\";\r\n import {\r\n@@ -10,116 +10,125 @@\n \r\n const AppointmentForm = () => {\r\n   const dispatch = useDispatch();\r\n \r\n-  // âœ… Redux se logged-in user ka id fetch kar rahe hain\r\n-  const userId = useSelector((state) => state.auth.userId); // ðŸ”¥ Ensure auth slice has userId\r\n+  // âœ… Redux se logged-in user ka ID fetch kar rahe hain\r\n+  const userId = useSelector((state) => state.auth.userId); \r\n   const loading = useSelector((state) => state.appointments.loading);\r\n \r\n+  // âœ… Form State\r\n   const [formData, setFormData] = useState({\r\n-    userId: userId || \"\", // Redux se aane wala user ID\r\n+    userId: \"\", \r\n     doctorId: \"\",\r\n     appointmentDate: \"\",\r\n     appointmentTime: \"\",\r\n     notes: \"\",\r\n   });\r\n \r\n+  // âœ… Redux `userId` change hote hi form me update hoga\r\n+  useEffect(() => {\r\n+    setFormData((prev) => ({ ...prev, userId }));\r\n+  }, [userId]);\r\n+\r\n+  // âœ… Input Change Handler\r\n   const handleChange = (e) => {\r\n     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n   };\r\n \r\n+  // âœ… Form Submit Handler\r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n       dispatch(setLoading(true));\r\n       const res = await axiosInstant.post(\"/api/appointments\", formData);\r\n \r\n-      if (res.data.success) {\r\n-        toast.success(res.data.message);\r\n+      if (res.data?.success) {\r\n+        toast.success(res.data.message || \"Appointment booked successfully!\");\r\n+        dispatch(setAppointments(res.data.appointments));\r\n \r\n-        // âœ… Redux store me naye appointment ko add karna\r\n-        dispatch(setAppointments([...res.data.appointments]));\r\n-\r\n-        // âœ… Form reset\r\n+        // âœ… Form Reset\r\n         setFormData({\r\n-          userId: userId,\r\n+          userId,\r\n           doctorId: \"\",\r\n           appointmentDate: \"\",\r\n           appointmentTime: \"\",\r\n           notes: \"\",\r\n         });\r\n       }\r\n     } catch (error) {\r\n-      dispatch(\r\n-        setError(error.response?.data?.message || \"Something went wrong\")\r\n-      );\r\n-      toast.error(error.response?.data?.message || \"Something went wrong\");\r\n+      const errorMsg = error.response?.data?.message || error.message || \"Something went wrong\";\r\n+      dispatch(setError(errorMsg));\r\n+      toast.error(errorMsg);\r\n     } finally {\r\n       dispatch(setLoading(false));\r\n     }\r\n   };\r\n \r\n   return (\r\n-    <div className=\"appointment p-4 bg-white shadow rounded w-full max-w-md mx-auto\">\r\n-      <form onSubmit={handleSubmit}>\r\n-        <h2 className=\"text-xl font-semibold mb-2\">Book an Appointment</h2>\r\n+    <div className=\"p-6 bg-white shadow-lg rounded-lg w-full max-w-md mx-auto\">\r\n+      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n+        <h2 className=\"text-2xl font-bold text-center\">Book an Appointment</h2>\r\n \r\n-        <div className=\"mb-3\">\r\n-          <label className=\"form-label\">Doctor ID</label>\r\n+        {/* Doctor ID */}\r\n+        <div>\r\n+          <label className=\"block text-gray-700 font-semibold\">Doctor ID</label>\r\n           <input\r\n             type=\"text\"\r\n-            className=\"form-control\"\r\n+            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-200\"\r\n             name=\"doctorId\"\r\n             value={formData.doctorId}\r\n             onChange={handleChange}\r\n             required\r\n           />\r\n         </div>\r\n \r\n-        <div className=\"mb-3\">\r\n-          <label className=\"form-label\">Appointment Date</label>\r\n+        {/* Appointment Date */}\r\n+        <div>\r\n+          <label className=\"block text-gray-700 font-semibold\">Appointment Date</label>\r\n           <input\r\n             type=\"date\"\r\n-            className=\"form-control\"\r\n+            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-200\"\r\n             name=\"appointmentDate\"\r\n             value={formData.appointmentDate}\r\n             onChange={handleChange}\r\n             required\r\n           />\r\n         </div>\r\n \r\n-        <div className=\"mb-3\">\r\n-          <label className=\"form-label\">Appointment Time</label>\r\n+        {/* Appointment Time */}\r\n+        <div>\r\n+          <label className=\"block text-gray-700 font-semibold\">Appointment Time</label>\r\n           <input\r\n             type=\"time\"\r\n-            className=\"form-control\"\r\n+            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-200\"\r\n             name=\"appointmentTime\"\r\n             value={formData.appointmentTime}\r\n             onChange={handleChange}\r\n             required\r\n           />\r\n         </div>\r\n \r\n-        <div className=\"mb-3\">\r\n-          <label className=\"form-label\">Notes (Optional)</label>\r\n+        {/* Notes */}\r\n+        <div>\r\n+          <label className=\"block text-gray-700 font-semibold\">Notes (Optional)</label>\r\n           <textarea\r\n-            className=\"form-control\"\r\n+            className=\"w-full p-2 border border-gray-300 rounded-md focus:ring focus:ring-blue-200\"\r\n             name=\"notes\"\r\n             value={formData.notes}\r\n             onChange={handleChange}\r\n             placeholder=\"Any additional details\"\r\n           ></textarea>\r\n         </div>\r\n \r\n-        {loading ? (\r\n-          <button type=\"submit\" className=\"btn btn-primary\" disabled>\r\n-            Please wait...\r\n-          </button>\r\n-        ) : (\r\n-          <button type=\"submit\" className=\"btn btn-primary\">\r\n-            Book Appointment\r\n-          </button>\r\n-        )}\r\n+        {/* Submit Button */}\r\n+        <button\r\n+          type=\"submit\"\r\n+          className={`w-full p-2 rounded-md text-white font-semibold \r\n+          ${loading ? \"bg-gray-400 cursor-not-allowed\" : \"bg-blue-600 hover:bg-blue-700\"}`}\r\n+          disabled={loading || !formData.doctorId || !formData.appointmentDate || !formData.appointmentTime}\r\n+        >\r\n+          {loading ? \"Please wait...\" : \"Book Appointment\"}\r\n+        </button>\r\n       </form>\r\n     </div>\r\n   );\r\n };\r\n"
                }
            ],
            "date": 1742109875022,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport axiosInstant from \"../utils/axiosInstant\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { setAppointments,setLoading,setError } from \"../redux/appointmentSlice\";\r\nconst AppointmentForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    userId: \"\", // Should be set automatically from logged-in user\r\n    doctorId: \"\",\r\n    appointmentDate: \"\",\r\n    appointmentTime: \"\",\r\n    notes: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      const res = await axiosInstant.post(\"/api/appointments\", formData);\r\n\r\n      if (res.data.success) {\r\n        toast.success(res.data.message);\r\n\r\n        setFormData({\r\n          userId: \"\",\r\n          doctorId: \"\",\r\n          appointmentDate: \"\",\r\n          appointmentTime: \"\",\r\n          notes: \"\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || \"Something went wrong\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"appointment p-4 bg-white shadow rounded w-full max-w-md mx-auto\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h2 className=\"text-xl font-semibold mb-2\">Book an Appointment</h2>\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Doctor ID</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"doctorId\"\r\n            value={formData.doctorId}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Appointment Date</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            name=\"appointmentDate\"\r\n            value={formData.appointmentDate}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Appointment Time</label>\r\n          <input\r\n            type=\"time\"\r\n            className=\"form-control\"\r\n            name=\"appointmentTime\"\r\n            value={formData.appointmentTime}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Notes (Optional)</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={handleChange}\r\n            placeholder=\"Any additional details\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <button type=\"submit\" className=\"btn btn-primary\" disabled>\r\n            Please wait...\r\n          </button>\r\n        ) : (\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Book Appointment\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentForm;\r\n"
        }
    ]
}